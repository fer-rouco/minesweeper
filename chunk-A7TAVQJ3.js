import{d as g}from"./chunk-6MIOUXA2.js";import{a,b as o,d as r,l as n,o as c,r as d,ua as m}from"./chunk-M6Z6SCRI.js";var h=class e{static buildBaseAction(t,i=m.BUTTON){return{id:t,type:i}}static buildLabel(t){return{label:t}}static buildIcon(t){return{icon:t}}static buildLabelOrIcon(t){let i=e.buildLabel("");return t.label&&(i=e.buildLabel(t.label)),t.icon&&(i=e.buildIcon(t.icon)),i}static buildFuctionAction(t){return o(a(a({},e.buildBaseAction(t.id,t.type)),e.buildLabelOrIcon(t)),{function:t.fn})}static buildLinkAction(t){return o(a(a({},e.buildBaseAction(t.id,t.type)),e.buildLabelOrIcon(t)),{to:t.to})}static buildBoardAction(){return e.buildLinkAction({id:"board",icon:"bomb.png",to:"/board"})}static buildFinishedGameListAction(t){return e.buildLinkAction({id:"finished-games-list",icon:t.icon,label:t.label,type:t.type,to:"/finished-games-list"})}static buildFinishedGameListIconAction(){return e.buildFinishedGameListAction({icon:"list.svg"})}static buildSetupAction(){return e.buildLinkAction({id:"setup",icon:"settings.svg",to:"/setup"})}static buildBoardActions(){return[e.buildFinishedGameListIconAction(),e.buildSetupAction()]}static buildFinishedGameListActions(){return[e.buildBoardAction(),e.buildSetupAction()]}};var f=function(e){return e[e.WIN=0]="WIN",e[e.LOOSE=1]="LOOSE",e}(f||{});var w=(()=>{class e{constructor(i){this.storageManagerService=i,this.resetGame$=new r,this.startingNewGame$=new r,this.startTimer$=new r,this.gameOver$=new r,this.updateFlagCounter$=new r}ngOnDestroy(){let i=new r;this.resetGame$.pipe(n(i)).subscribe(()=>{}),this.startingNewGame$.pipe(n(i)).subscribe(()=>{}),this.startTimer$.pipe(n(i)).subscribe(()=>{}),this.gameOver$.pipe(n(i)).subscribe(()=>{}),this.updateFlagCounter$.pipe(n(i)).subscribe(()=>{})}resetGame(){this.resetGame$.next(null)}getResetGameObservable(){return this.resetGame$.asObservable()}gameOver(i){this.gameOver$.next(i)}getGameOverObservable(){return this.gameOver$.asObservable()}startNewGame(){this.startingNewGame$.next(null)}getStartNewGameObservable(){return this.startingNewGame$.asObservable()}startTimer(){this.startTimer$.next(null)}getStartTimerObservable(){return this.startTimer$.asObservable()}updateFlagCounter(i){this.updateFlagCounter$.next(i)}getUpdateFlagCounterObservable(){return this.updateFlagCounter$.asObservable()}registerFinishedGameItem(i,s,p,v){let u=i||s,b=0;u&&s&&(b=Math.abs(s.getTime()-u.getTime())/1e3);let O={startTime:u?.toString()||"",endTime:s?.toString()||"",difficulty:p,totalTimeSpent:b,status:v},l=this.storageManagerService.getItem("list");l||(l=new Array),l.push(O),this.storageManagerService.setItem("list",l)}getFinishedGameList(){return this.storageManagerService.getItem("list")}static{this.\u0275fac=function(s){return new(s||e)(d(g))}}static{this.\u0275prov=c({token:e,factory:e.\u0275fac,providedIn:"root"})}}return e})();export{h as a,f as b,w as c};
